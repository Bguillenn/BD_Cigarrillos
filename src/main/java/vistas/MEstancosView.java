/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.EstadoRegistro;
import modelos.Departamento;
import modelos.Provincia;
import modelos.Distrito;
import modelos.Estanco;
import modelos.ControllerResponse;
import controladores.EstadoRegistrosController;
import controladores.DepartamentosController;
import controladores.ProvinciasController;
import controladores.DistritosController;
import controladores.EstancosController;
import config.Connector;
import java.awt.event.ItemEvent;
import java.util.ArrayList;


/**
 *
 * @author Brayan Guillen N
 */
public class MEstancosView extends javax.swing.JFrame {
    
    private ArrayList<Departamento> departamentos;
    private ArrayList<Provincia> provincias;
    private ArrayList<Distrito> distritos;
    private int estado = 0;
    /*
    Maneja elestado del formulario
    0 = Ninguna accion
    1 = Adicionando
    2 = Modificando
    3 = Eliminando
    4 = Inactivando
    5 = Reactivando
    */
    private EstadoRegistrosController estRegController;
    private DepartamentosController departamentosController;
    private ProvinciasController provinciasController;
    private DistritosController distritosController;
    private EstancosController estancosController;
    private Connector db;
    /**
     * Creates new form MNacionesView
     */
    public MEstancosView() {
        db = new Connector();
        estRegController = new EstadoRegistrosController(db.getConnection());
        departamentosController = new DepartamentosController(db.getConnection());
        provinciasController = new ProvinciasController(db.getConnection());
        distritosController = new DistritosController(db.getConnection());
        estancosController = new EstancosController(db.getConnection());
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        this.txtCodigo.setEnabled(false);
        this.txtLicenciatura.setEnabled(false);
        this.txtExpenduria.setEnabled(false);
        this.txtNombre.setEnabled(false);
        this.txtDireccion.setEnabled(false);
        this.cbxDepartamento.setEnabled(false);
        this.cbxProvincia.setEnabled(false);
        this.cbxDistrito.setEnabled(false);
        this.txtEstReg.setEnabled(false);
        this.setLocationRelativeTo(null);
        cargarTabla();
        cargarDepartamentos();
        cargarProvincias(departamentos.get(0));
        cargarDistritos(provincias.get(0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtEstReg = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbxDepartamento = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtLicenciatura = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtExpenduria = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbxProvincia = new javax.swing.JComboBox<>();
        cbxDistrito = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnInactivar = new javax.swing.JButton();
        btnReactivar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Maestro de naciones");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(114, 133, 38));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ESTANCOS");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Gestiona los registros de estancos en el sistema");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del departamento"));

        jLabel3.setText("Codigo:");

        jLabel4.setText("Nombre:");

        jLabel5.setText("Estado del registro:");

        jLabel8.setText("Departamento:");

        cbxDepartamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxDepartamentoItemStateChanged(evt);
            }
        });

        jLabel7.setText("Lic:");

        jLabel9.setText("Exp:");

        jLabel10.setText("Direccion:");

        jLabel11.setText("Provincia:");

        cbxProvincia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxProvincia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxProvinciaItemStateChanged(evt);
            }
        });

        cbxDistrito.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setText("Distrito:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExpenduria, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLicenciatura, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtEstReg, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(19, 19, 19)
                        .addComponent(cbxDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtLicenciatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtExpenduria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtEstReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(0, 11, Short.MAX_VALUE))))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabla de registros"));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Licenciatura", "Expenduria", "Nombre", "Direccion", "Departamento", "Provincia", "Distrito", "Estado Registro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblData.setSelectionForeground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(tblData);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Informacion del estado"));

        jLabel6.setText("Accion:");

        lblEstado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEstado.setText("Ninguna");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEstado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnInactivar.setText("Inactivar");
        btnInactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInactivarActionPerformed(evt);
            }
        });

        btnReactivar.setText("Reactivar");
        btnReactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReactivarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInactivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnReactivar, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnActualizar)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnActualizar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInactivar)
                    .addComponent(btnReactivar)
                    .addComponent(btnSalir))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

        this.cambiarEstado(1);
        this.txtCodigo.setText("");
        this.txtLicenciatura.setText("");
        this.txtExpenduria.setText("");
        this.txtNombre.setText("");
        this.txtDireccion.setText("");
        this.cbxDepartamento.setSelectedIndex(0);
        cargarProvincias(departamentos.get(0));
        this.cbxProvincia.setSelectedIndex(0);
        cargarDistritos(provincias.get(0));
        this.cbxDistrito.setSelectedIndex(0);
        EstadoRegistro estReg = estRegController.search(1); //Buscamos el estado de registro con codigo 1
        this.txtEstReg.setText(estReg.getDescripcion());
        this.txtCodigo.setEnabled(true);
        this.txtLicenciatura.setEnabled(true);
        this.txtExpenduria.setEnabled(true);
        this.txtNombre.setEnabled(true);
        this.txtDireccion.setEnabled(true);
        this.cbxDepartamento.setEnabled(true);
        this.cbxProvincia.setEnabled(true);
        this.cbxDistrito.setEnabled(true);
        this.txtEstReg.setEnabled(false);
        this.txtCodigo.requestFocus();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int indexRow = this.tblData.getSelectedRow();
        if(indexRow == -1){
            JOptionPane.showMessageDialog(this, "Tiene que selecionar un registro de la tabla", "Elegir uno", JOptionPane.ERROR_MESSAGE);
            this.btnCancelar.doClick();
            return;
        }
        this.cambiarEstado(2);
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblData.getModel();
        Estanco estanco = estancosController.search( (String) modeloTabla.getValueAt(indexRow, 0));
        EstadoRegistro estReg= estRegController.search(estanco.getEstadoRegistro());
        Distrito distrito = distritosController.search(estanco.getDistritoCodigo());
        Departamento departamento = departamentosController.search(distrito.getDepartamentoCodigo());
        Provincia provincia = provinciasController.search(distrito.getProvinciaCodigo());
        this.txtCodigo.setText(estanco.getCodigo());
        this.txtLicenciatura.setText(estanco.getLicenciatura()+"");
        this.txtExpenduria.setText(estanco.getExpenduria()+"");
        this.txtNombre.setText(estanco.getNombre());
        this.txtDireccion.setText(estanco.getDireccion());
        this.cbxDepartamento.setSelectedItem(departamento.getNombre());
        cargarProvincias(departamento);
        this.cbxProvincia.setSelectedItem(provincia.getNombre());
        cargarDistritos(provincia);
        this.cbxDistrito.setSelectedItem(distrito.getNombre());
        this.txtEstReg.setText(estReg.getDescripcion());
        this.txtCodigo.setEnabled(false);
        this.txtLicenciatura.setEnabled(true);
        this.txtExpenduria.setEnabled(true);
        this.txtNombre.setEnabled(true);
        this.txtDireccion.setEnabled(true);
        this.cbxDepartamento.setEnabled(true);
        this.cbxProvincia.setEnabled(true);
        this.cbxDistrito.setEnabled(true);
        this.txtEstReg.setEnabled(false);
        this.txtNombre.requestFocus();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnInactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInactivarActionPerformed
        int indexRow = this.tblData.getSelectedRow();
        if(indexRow == -1){
            JOptionPane.showMessageDialog(this, "Tiene que selecionar un registro de la tabla", "Elegir uno", JOptionPane.ERROR_MESSAGE);
            this.btnCancelar.doClick();
            return;
        }
        this.cambiarEstado(4);
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblData.getModel();
        Estanco estanco = estancosController.search( (String) modeloTabla.getValueAt(indexRow, 0));
        EstadoRegistro estReg = estRegController.search(3);
        Distrito distrito = distritosController.search(estanco.getDistritoCodigo());
        Departamento departamento = departamentosController.search(distrito.getDepartamentoCodigo());
        Provincia provincia = provinciasController.search(distrito.getProvinciaCodigo());
        this.txtCodigo.setText(estanco.getCodigo());
        this.txtLicenciatura.setText(estanco.getLicenciatura()+"");
        this.txtExpenduria.setText(estanco.getExpenduria()+"");
        this.txtNombre.setText(estanco.getNombre());
        this.txtDireccion.setText(estanco.getDireccion());
        this.cbxDepartamento.setSelectedItem(departamento.getNombre());
        cargarProvincias(departamento);
        this.cbxProvincia.setSelectedItem(provincia.getNombre());
        cargarDistritos(provincia);
        this.cbxDistrito.setSelectedItem(distrito.getNombre());
        this.txtEstReg.setText(estReg.getDescripcion());
        this.txtCodigo.setEnabled(false);
        this.txtLicenciatura.setEnabled(false);
        this.txtExpenduria.setEnabled(false);
        this.txtNombre.setEnabled(false);
        this.txtDireccion.setEnabled(false);
        this.cbxDepartamento.setEnabled(false);
        this.cbxProvincia.setEnabled(false);
        this.cbxDistrito.setEnabled(false);
        this.txtEstReg.setEnabled(false);
    }//GEN-LAST:event_btnInactivarActionPerformed

    private void btnReactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReactivarActionPerformed
        int indexRow = this.tblData.getSelectedRow();
        if(indexRow == -1){
            JOptionPane.showMessageDialog(this, "Tiene que selecionar un registro de la tabla", "Elegir uno", JOptionPane.ERROR_MESSAGE);
            this.btnCancelar.doClick();
            return;
        }
        this.cambiarEstado(5);
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblData.getModel();
        Estanco estanco = estancosController.search( (String) modeloTabla.getValueAt(indexRow, 0));
        EstadoRegistro estReg = estRegController.search(1);
        Distrito distrito = distritosController.search(estanco.getDistritoCodigo());
        Departamento departamento = departamentosController.search(distrito.getDepartamentoCodigo());
        Provincia provincia = provinciasController.search(distrito.getProvinciaCodigo());
        this.txtCodigo.setText(estanco.getCodigo());
        this.txtLicenciatura.setText(estanco.getLicenciatura()+"");
        this.txtExpenduria.setText(estanco.getExpenduria()+"");
        this.txtNombre.setText(estanco.getNombre());
        this.txtDireccion.setText(estanco.getDireccion());
        this.cbxDepartamento.setSelectedItem(departamento.getNombre());
        cargarProvincias(departamento);
        this.cbxProvincia.setSelectedItem(provincia.getNombre());
        cargarDistritos(provincia);
        this.cbxDistrito.setSelectedItem(distrito.getNombre());
        this.txtEstReg.setText(estReg.getDescripcion());
        this.txtCodigo.setEnabled(false);
        this.txtLicenciatura.setEnabled(false);
        this.txtExpenduria.setEnabled(false);
        this.txtNombre.setEnabled(false);
        this.txtDireccion.setEnabled(false);
        this.cbxDepartamento.setEnabled(false);
        this.cbxProvincia.setEnabled(false);
        this.cbxDistrito.setEnabled(false);
        this.txtEstReg.setEnabled(false);
    }//GEN-LAST:event_btnReactivarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        if(estado != 0){
            int resp = JOptionPane.showConfirmDialog(this, "Estas realizando una acción ¿Realmente deseas salir?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(resp == 0) this.dispose();
        }else{
            this.dispose();
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int indexRow = this.tblData.getSelectedRow();
        if(indexRow == -1){
            JOptionPane.showMessageDialog(this, "Tiene que selecionar un registro de la tabla", "Elegir uno", JOptionPane.ERROR_MESSAGE);
            this.btnCancelar.doClick();
            return;
        }
        this.cambiarEstado(3);
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblData.getModel();
        Estanco estanco = estancosController.search( (String) modeloTabla.getValueAt(indexRow, 0));
        EstadoRegistro estReg = estRegController.search(2);
        Distrito distrito = distritosController.search(estanco.getDistritoCodigo());
        Departamento departamento = departamentosController.search(distrito.getDepartamentoCodigo());
        Provincia provincia = provinciasController.search(distrito.getProvinciaCodigo());
        this.txtCodigo.setText(estanco.getCodigo());
        this.txtLicenciatura.setText(estanco.getLicenciatura()+"");
        this.txtExpenduria.setText(estanco.getExpenduria()+"");
        this.txtNombre.setText(estanco.getNombre());
        this.txtDireccion.setText(estanco.getDireccion());
        this.cbxDepartamento.setSelectedItem(departamento.getNombre());
        cargarProvincias(departamento);
        this.cbxProvincia.setSelectedItem(provincia.getNombre());
        cargarDistritos(provincia);
        this.cbxDistrito.setSelectedItem(distrito.getNombre());
        this.txtEstReg.setText(estReg.getDescripcion());
        this.txtCodigo.setEnabled(false);
        this.txtLicenciatura.setEnabled(false);
        this.txtExpenduria.setEnabled(false);
        this.txtNombre.setEnabled(false);
        this.txtDireccion.setEnabled(false);
        this.cbxDepartamento.setEnabled(false);
        this.cbxProvincia.setEnabled(false);
        this.cbxDistrito.setEnabled(false);
        this.txtEstReg.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.cambiarEstado(0);
        this.txtCodigo.setText("");
        this.txtLicenciatura.setText("");
        this.txtExpenduria.setText("");
        this.txtNombre.setText("");
        this.txtDireccion.setText("");
        this.cbxDepartamento.setSelectedIndex(0);
        this.cbxProvincia.setSelectedIndex(0);
        this.cbxDistrito.setSelectedIndex(0);
        this.txtEstReg.setText("");
        this.txtCodigo.setEnabled(false);
        this.txtLicenciatura.setEnabled(false);
        this.txtExpenduria.setEnabled(false);
        this.txtNombre.setEnabled(false);
        this.txtDireccion.setEnabled(false);
        this.cbxDepartamento.setEnabled(false);
        this.cbxProvincia.setEnabled(false);
        this.cbxDistrito.setEnabled(false);
        this.txtEstReg.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        switch(estado){
            case 0:
                JOptionPane.showMessageDialog(this, "Ninguna accion se esta realizando", "Informacion", JOptionPane.WARNING_MESSAGE);
                break;
            case 1:
                adicionarNuevo();
                break;
            case 2:
                modificarRegistro();
                break;
            case 3:
                eliminarRegistro();
                break;
            case 4:
                inactivarRegistro();
                break;
            case 5:
                reactivarRegistro();
                break;
            default:
                JOptionPane.showMessageDialog(this, "Error accion no reconocida", "Error en la accion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void cbxDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxDepartamentoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED)
            cargarProvincias(departamentos.get(this.cbxDepartamento.getSelectedIndex()));
    }//GEN-LAST:event_cbxDepartamentoItemStateChanged

    private void cbxProvinciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxProvinciaItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED)
            cargarDistritos(provincias.get(this.cbxProvincia.getSelectedIndex()));
    }//GEN-LAST:event_cbxProvinciaItemStateChanged

    private void cargarDepartamentos(){
        departamentos = departamentosController.getAll();
        this.cbxDepartamento.removeAllItems();
        for(int i=0; i<departamentos.size();i++)
            this.cbxDepartamento.addItem(departamentos.get(i).getNombre());
    }
    
    private void cargarProvincias(Departamento depa){
        provincias = provinciasController.getAllByDepartamento(depa.getCodigo());
        this.cbxProvincia.removeAllItems();
        for(int i=0; i<provincias.size();i++)
            this.cbxProvincia.addItem(provincias.get(i).getNombre());
    }
    
    private void cargarDistritos(Provincia prov){
        distritos = distritosController.getAllByProvincia(prov.getCodigo());
        this.cbxDistrito.removeAllItems();
        for(int i=0; i< distritos.size() ;i++)
            this.cbxDistrito.addItem(distritos.get(i).getNombre());
    }
    
    private void cambiarEstado(int estado){
        this.estado = estado;
        String text = "";
        switch(estado){
            case 0: text = "Ninguna"; break;
            case 1: text = "Adicionando"; break;
            case 2: text = "Modificando"; break;
            case 3: text = "Eliminando"; break;
            case 4: text = "Inactivando"; break;
            case 5: text = "Reactivando"; break;
        }
        lblEstado.setText(text);
    }

    private void cargarTabla(){
        DefaultTableModel modeloTabla = new DefaultTableModel();
        ArrayList<Estanco> data = estancosController.getAll();
        modeloTabla.setColumnIdentifiers(new Object[]{"Codigo", "Lic", "Exp", "Nombre", "Direccion", "Departamento", "Provincia", "Distrito", "Estado registro"});
        EstadoRegistro estReg;
        Departamento depa;
        Provincia prov;
        Distrito dis;
        try{
             for(int i=0; i < data.size(); i++){
                 estReg = estRegController.search(data.get(i).getEstadoRegistro());
                 dis = distritosController.search(data.get(i).getDistritoCodigo());
                 depa = departamentosController.search(dis.getDepartamentoCodigo());
                 prov = provinciasController.search(dis.getProvinciaCodigo());
                 if(estReg.getCodigo() != 2){
                     modeloTabla.addRow(new Object[]{
                        data.get(i).getCodigo(),
                        data.get(i).getLicenciatura(),
                        data.get(i).getExpenduria(),
                        data.get(i).getNombre(),
                        data.get(i).getDireccion(),
                        depa.getNombre(),
                        prov.getNombre(),
                        dis.getNombre(),
                        estReg.getDescripcion()
                     });
                 }
             }
             this.tblData.setModel(modeloTabla);
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Ocurrio un error durante la carga de datos", "Error inesperado", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }
    
    private void adicionarNuevo(){
        String ventanaTitle = "Informacion de adiccionar";
        if(txtCodigo.getText().isBlank() || txtNombre.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos", ventanaTitle, JOptionPane.ERROR_MESSAGE);
            return;
        }
        int codigo, lic, exp;
        try{
            codigo = Integer.parseInt(this.txtCodigo.getText());
            lic = Integer.parseInt(this.txtLicenciatura.getText());
            exp = Integer.parseInt(this.txtExpenduria.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "El campo codigo debe ser un numero entero", ventanaTitle,JOptionPane.ERROR_MESSAGE);
            return;
        }
        int indexDis = this.cbxDistrito.getSelectedIndex();
        Estanco estanco = new Estanco(
                codigo+"",
                lic,
                exp,
                this.txtNombre.getText(),
                this.txtDireccion.getText(),
                this.distritos.get(indexDis).getCodigo(),
                1
        );
        ControllerResponse resp = estancosController.adiccionar(estanco);
        if(resp.isOk()){
            JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
            cargarTabla();
            btnCancelar.doClick();
        }else{
            JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void modificarRegistro(){
        String ventanaTitle = "Información de la modificacion";
        if(this.txtNombre.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "El valor del nombre y la descripcion no puede ser vacio", ventanaTitle, JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int lic, exp;
        try{
            lic = Integer.parseInt(this.txtLicenciatura.getText());
            exp = Integer.parseInt(this.txtExpenduria.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "El campo codigo debe ser un numero entero", ventanaTitle,JOptionPane.ERROR_MESSAGE);
            return;
        }
        int opc = JOptionPane.showConfirmDialog(this, "¿Realmente deseas realizar los cambios?", ventanaTitle, JOptionPane.YES_NO_OPTION);
        if(opc == JOptionPane.YES_OPTION){
            Estanco estanco = estancosController.search(this.txtCodigo.getText());
            if(estanco != null){
                int index =this.cbxDistrito.getSelectedIndex();
                estanco.setLicenciatura(lic);
                estanco.setExpenduria(exp);
                estanco.setNombre(this.txtNombre.getText());
                estanco.setDistritoCodigo(this.distritos.get(index).getCodigo());
                ControllerResponse resp = estancosController.modificar(estanco);
                if(resp.isOk()){
                    JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
                    cargarTabla();
                }else{
                    JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "No se encontro el registro", ventanaTitle, JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Accion cancelada con exito", ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
        }
        btnCancelar.doClick();
    }
    
    private void eliminarRegistro(){
        String ventanaTitle = "Información de la eliminación";
        int opc = JOptionPane.showConfirmDialog(this, "¿Realmente desea eliminar el registro?", ventanaTitle, JOptionPane.YES_NO_OPTION);
        if(opc == JOptionPane.YES_OPTION){
            ControllerResponse resp = estancosController.eliminar(this.txtCodigo.getText());
            if(resp.isOk()){
                JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
                cargarTabla();
            }else{
                JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Operacion cancelada con exito", ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
        }
        btnCancelar.doClick();
    }
    
    private void inactivarRegistro(){
        String ventanaTitle = "Información de la inactivación";
        int opc = JOptionPane.showConfirmDialog(this, "¿Realmente desea inactivar el registro?", ventanaTitle, JOptionPane.YES_NO_OPTION);
        if(opc == JOptionPane.YES_OPTION){
            ControllerResponse resp = estancosController.inactivar(this.txtCodigo.getText());
            if(resp.isOk()){
                JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
                cargarTabla();
            }else{
                JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Operacion cancelada con exito", ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
        }
        btnCancelar.doClick();
    }
    
    private void reactivarRegistro(){
        String ventanaTitle = "Información de la reactivación";
        int opc = JOptionPane.showConfirmDialog(this, "¿Realmente desea reactivar el registro?", ventanaTitle, JOptionPane.YES_NO_OPTION);
        if(opc == JOptionPane.YES_OPTION){
            ControllerResponse resp = estancosController.reactivar(this.txtCodigo.getText());
            if(resp.isOk()){
                JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
                cargarTabla();
            }else{
                JOptionPane.showMessageDialog(this, resp.getMessage(), ventanaTitle, JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Operacion cancelada con exito", ventanaTitle, JOptionPane.INFORMATION_MESSAGE);
        }
        btnCancelar.doClick();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MEstancosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MEstancosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MEstancosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MEstancosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MEstancosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInactivar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnReactivar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbxDepartamento;
    private javax.swing.JComboBox<String> cbxDistrito;
    private javax.swing.JComboBox<String> cbxProvincia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEstReg;
    private javax.swing.JTextField txtExpenduria;
    private javax.swing.JTextField txtLicenciatura;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
